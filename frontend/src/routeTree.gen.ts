/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as RegistrationImport } from './routes/registration'
import { Route as AuthImport } from './routes/auth'
import { Route as LkRouteImport } from './routes/lk/route'
import { Route as AdminRouteImport } from './routes/admin/route'
import { Route as RouteImport } from './routes/route'
import { Route as LkSectionsImport } from './routes/lk/sections'
import { Route as LkProfileImport } from './routes/lk/profile'
import { Route as LkPaymentImport } from './routes/lk/payment'
import { Route as LkMeExplorerImport } from './routes/lk/me-explorer'
import { Route as LkHomeImport } from './routes/lk/home'
import { Route as LkAdmissionImport } from './routes/lk/admission'
import { Route as AdminMainImport } from './routes/admin/main'
import { Route as AdminListRouteImport } from './routes/admin/list/route'
import { Route as AdminListUsersImport } from './routes/admin/list/users'
import { Route as AdminListDocumentsImport } from './routes/admin/list/documents'
import { Route as AdminListAdmissionsImport } from './routes/admin/list/admissions'

// Create/Update Routes

const RegistrationRoute = RegistrationImport.update({
  path: '/registration',
  getParentRoute: () => rootRoute,
} as any)

const AuthRoute = AuthImport.update({
  path: '/auth',
  getParentRoute: () => rootRoute,
} as any)

const LkRouteRoute = LkRouteImport.update({
  path: '/lk',
  getParentRoute: () => rootRoute,
} as any)

const AdminRouteRoute = AdminRouteImport.update({
  path: '/admin',
  getParentRoute: () => rootRoute,
} as any)

const RouteRoute = RouteImport.update({
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const LkSectionsRoute = LkSectionsImport.update({
  path: '/sections',
  getParentRoute: () => LkRouteRoute,
} as any)

const LkProfileRoute = LkProfileImport.update({
  path: '/profile',
  getParentRoute: () => LkRouteRoute,
} as any)

const LkPaymentRoute = LkPaymentImport.update({
  path: '/payment',
  getParentRoute: () => LkRouteRoute,
} as any)

const LkMeExplorerRoute = LkMeExplorerImport.update({
  path: '/me-explorer',
  getParentRoute: () => LkRouteRoute,
} as any)

const LkHomeRoute = LkHomeImport.update({
  path: '/home',
  getParentRoute: () => LkRouteRoute,
} as any)

const LkAdmissionRoute = LkAdmissionImport.update({
  path: '/admission',
  getParentRoute: () => LkRouteRoute,
} as any)

const AdminMainRoute = AdminMainImport.update({
  path: '/main',
  getParentRoute: () => AdminRouteRoute,
} as any)

const AdminListRouteRoute = AdminListRouteImport.update({
  path: '/list',
  getParentRoute: () => AdminRouteRoute,
} as any)

const AdminListUsersRoute = AdminListUsersImport.update({
  path: '/users',
  getParentRoute: () => AdminListRouteRoute,
} as any)

const AdminListDocumentsRoute = AdminListDocumentsImport.update({
  path: '/documents',
  getParentRoute: () => AdminListRouteRoute,
} as any)

const AdminListAdmissionsRoute = AdminListAdmissionsImport.update({
  path: '/admissions',
  getParentRoute: () => AdminListRouteRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      preLoaderRoute: typeof RouteImport
      parentRoute: typeof rootRoute
    }
    '/admin': {
      preLoaderRoute: typeof AdminRouteImport
      parentRoute: typeof rootRoute
    }
    '/lk': {
      preLoaderRoute: typeof LkRouteImport
      parentRoute: typeof rootRoute
    }
    '/auth': {
      preLoaderRoute: typeof AuthImport
      parentRoute: typeof rootRoute
    }
    '/registration': {
      preLoaderRoute: typeof RegistrationImport
      parentRoute: typeof rootRoute
    }
    '/admin/list': {
      preLoaderRoute: typeof AdminListRouteImport
      parentRoute: typeof AdminRouteImport
    }
    '/admin/main': {
      preLoaderRoute: typeof AdminMainImport
      parentRoute: typeof AdminRouteImport
    }
    '/lk/admission': {
      preLoaderRoute: typeof LkAdmissionImport
      parentRoute: typeof LkRouteImport
    }
    '/lk/home': {
      preLoaderRoute: typeof LkHomeImport
      parentRoute: typeof LkRouteImport
    }
    '/lk/me-explorer': {
      preLoaderRoute: typeof LkMeExplorerImport
      parentRoute: typeof LkRouteImport
    }
    '/lk/payment': {
      preLoaderRoute: typeof LkPaymentImport
      parentRoute: typeof LkRouteImport
    }
    '/lk/profile': {
      preLoaderRoute: typeof LkProfileImport
      parentRoute: typeof LkRouteImport
    }
    '/lk/sections': {
      preLoaderRoute: typeof LkSectionsImport
      parentRoute: typeof LkRouteImport
    }
    '/admin/list/admissions': {
      preLoaderRoute: typeof AdminListAdmissionsImport
      parentRoute: typeof AdminListRouteImport
    }
    '/admin/list/documents': {
      preLoaderRoute: typeof AdminListDocumentsImport
      parentRoute: typeof AdminListRouteImport
    }
    '/admin/list/users': {
      preLoaderRoute: typeof AdminListUsersImport
      parentRoute: typeof AdminListRouteImport
    }
  }
}

// Create and export the route tree

export const routeTree = rootRoute.addChildren([
  RouteRoute,
  AdminRouteRoute.addChildren([
    AdminListRouteRoute.addChildren([
      AdminListAdmissionsRoute,
      AdminListDocumentsRoute,
      AdminListUsersRoute,
    ]),
    AdminMainRoute,
  ]),
  LkRouteRoute.addChildren([
    LkAdmissionRoute,
    LkHomeRoute,
    LkMeExplorerRoute,
    LkPaymentRoute,
    LkProfileRoute,
    LkSectionsRoute,
  ]),
  AuthRoute,
  RegistrationRoute,
])

/* prettier-ignore-end */
